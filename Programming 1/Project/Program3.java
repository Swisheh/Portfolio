// file: Program3.java
// generated by: mashc
// from: Program3.mash

public class Program3 {

protected static final int MAX_INT = java.lang.Integer.MAX_VALUE;

protected static final int MIN_INT = java.lang.Integer.MIN_VALUE;

protected static final long MAX_LONG = java.lang.Long.MAX_VALUE;

protected static final long MIN_LONG = java.lang.Long.MIN_VALUE;

protected static final double PI = java.lang.Math.PI;

private static java.util.Scanner mash_console_scanner 
               = new java.util.Scanner(System.in);

protected static int downtime = 0;

protected static int uptime = 0;

protected static int fails = 0;

protected static int meanfails = 0;

protected static final int MAX = 10000;

protected static int[] letters = new int[Program3.MAX];

protected static int[] numbers = new int[Program3.MAX];

public static void main(java.lang.String[] mash_args_param) 
         throws java.lang.Exception {
            
{
while (mash_console_scanner.hasNextLine())
{
java.lang.String line = mash_console_scanner.nextLine();
java.lang.String o = Program3.read(line);
}
java.lang.System.out.println("Total uptime = " + Program3.uptime);
if (Program3.fails > 0)
{
java.lang.System.out.println("Number of failures = " + Program3.fails);
}
else
{
java.lang.System.out.println("No failures.");
}
java.lang.System.out.println("Mean time between failures = " + Program3.meanfails);
}

         }


protected static char read(char r)  {
if ('D' == r)
{
fails = Program3.fails + 1;
return r;
}
else
if ('U' == r)
{
return r;
}
else
{
return r;
}
}

protected static java.lang.String read(java.lang.String r)  {
java.lang.String t = "";
for (int i = 0; i < r.length(); i = i + 1)
{
t = t + Program3.read(r.charAt(i));
}
return t;
}
}
